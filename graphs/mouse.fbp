title: Mouse event example

MouseMove(dom/addMouseEvent)
MouseClick(dom/addMouseEvent)
BodyEl(dom/querySelector)
SetHtml(dom/setHtml)
Log(console/log)
toString(data/string)
HandleMe(template/handlebars)
ClickMeForIOUpdate(template/handlebars)
Actor(core/actor)

'body' -> selector BodyEl

'mousemove'  -> event MouseMove
'click' -> event MouseClick

BodyEl selection -> element MouseMove
BodyEl selection -> element MouseClick

'<div>x: {{x}}, y: {{y}}</div>' -> ^body HandleMe
#'<p>queue: {{inQueue}}, TODO: queues *should* remove empty ones</div>' -> ^body ClickMeForQueueUpdate
'./connections.hb' ~> ^body ClickMeForIOUpdate

#MouseMove event [y] -> [x] in toString out -> html SetHtml
#MouseMove event [x] -> msg Log
MouseMove event -> vars HandleMe out -> html SetHtml

'I should be replaced!' -> html SetHtml
BodyEl selection -> ^element SetHtml
BodyEl selection -> msg Log

'' -> :start Actor io -> ^in Poll(object/create)

#MouseClick event -> :start Poll out -> vars ClickMeForQueueUpdate out -> html SetHtml
MouseClick event -> :start Poll out -> vars ClickMeForIOUpdate out -> html SetHtml
Poll out -> msg Log

# Expose the schema of this output.. :-)
# MouseClick event:schema [type] ->
# MouseClick event:schema [title] ->

#MouseMove event [clientX] -> msg Log
#MouseMove event [clientY] -> msg Log
#MouseMove event [keyCode] -> msg Log
#MouseMove event [toElement] -> msg Log
#MouseMove event [fromElement] -> msg Log2(console/log)
